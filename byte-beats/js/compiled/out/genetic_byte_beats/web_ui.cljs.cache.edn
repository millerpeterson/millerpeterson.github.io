;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name genetic-byte-beats.web-ui, :imports nil, :requires {erlehmann genetic-byte-beats.forms.erlehmann, genetic-byte-beats.forms.erlehmann genetic-byte-beats.forms.erlehmann, evolved genetic-byte-beats.forms.evolved, genetic-byte-beats.forms.evolved genetic-byte-beats.forms.evolved, parsing genetic-byte-beats.parsing, genetic-byte-beats.parsing genetic-byte-beats.parsing, r reagent.core, reagent.core reagent.core}, :uses nil, :defs {play-controls {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/web_ui.cljs", :line 9, :column 7, :end-line 9, :end-column 20, :arglists (quote ([history commands]))}, :name genetic-byte-beats.web-ui/play-controls, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/web_ui.cljs", :end-column 20, :method-params ([history commands]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([history commands]))}, genetic-controls {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/web_ui.cljs", :line 21, :column 7, :end-line 21, :end-column 23, :arglists (quote ([_ commands]))}, :name genetic-byte-beats.web-ui/genetic-controls, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/web_ui.cljs", :end-column 23, :method-params ([_ commands]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ commands]))}, history-controls {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/web_ui.cljs", :line 41, :column 7, :end-line 41, :end-column 23, :arglists (quote ([history commands]))}, :name genetic-byte-beats.web-ui/history-controls, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/web_ui.cljs", :end-column 23, :method-params ([history commands]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([history commands]))}, cell-history {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/web_ui.cljs", :line 55, :column 7, :end-line 55, :end-column 19, :arglists (quote ([history]))}, :name genetic-byte-beats.web-ui/cell-history, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/web_ui.cljs", :end-column 19, :method-params ([history]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([history]))}, app {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/web_ui.cljs", :line 62, :column 7, :end-line 62, :end-column 10, :arglists (quote ([history commands]))}, :name genetic-byte-beats.web-ui/app, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/web_ui.cljs", :end-column 10, :method-params ([history commands]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([history commands]))}, run {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/web_ui.cljs", :line 70, :column 16, :end-line 70, :end-column 19, :export true, :arglists (quote ([history commands]))}, :name genetic-byte-beats.web-ui/run, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/web_ui.cljs", :end-column 19, :method-params ([history commands]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([history commands]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:breed :ul :key :button :simplify :li :on-click :div :stop :undo :id :class :perturb :new-line :play-and-print :complexify :mutate}, :order [:div :button :on-click :class :play-and-print :stop :breed :mutate :perturb :complexify :simplify :undo :new-line :ul :id :li :key]}, :doc nil}