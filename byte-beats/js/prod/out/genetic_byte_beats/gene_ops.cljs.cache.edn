;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name genetic-byte-beats.gene-ops, :imports nil, :requires {zip clojure.zip, clojure.zip clojure.zip}, :uses nil, :defs {replace-branch {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :line 31, :column 7, :end-line 31, :end-column 21, :arglists (quote ([l r])), :doc "Replace a formula branch rooted at l with a formula branch rooted at r."}, :name genetic-byte-beats.gene-ops/replace-branch, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :end-column 21, :method-params ([l r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([l r])), :doc "Replace a formula branch rooted at l with a formula branch rooted at r."}, gene-fns {:name genetic-byte-beats.gene-ops/gene-fns, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :line 7, :column 1, :end-line 7, :end-column 14, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :line 7, :column 6, :end-line 7, :end-column 14}, :doc "Symbols that are functions that may appear in the formulas."}, mutate-simplify {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :line 69, :column 7, :end-line 69, :end-column 22, :arglists (quote ([formula])), :doc "Mutate a formula by randomly replace one of its sub-trees with a\n   constant."}, :name genetic-byte-beats.gene-ops/mutate-simplify, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :end-column 22, :method-params ([formula]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([formula])), :doc "Mutate a formula by randomly replace one of its sub-trees with a\n   constant."}, random-child {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :line 84, :column 7, :end-line 84, :end-column 19, :arglists (quote ([forms])), :doc "Return a child formula resulting from crossing over two randomly chosen\n   formula from forms, then mutating it."}, :name genetic-byte-beats.gene-ops/random-child, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :end-column 19, :method-params ([forms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([forms])), :doc "Return a child formula resulting from crossing over two randomly chosen\n   formula from forms, then mutating it."}, constant-locs {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :line 21, :column 7, :end-line 21, :end-column 20, :arglists (quote ([formula])), :doc "All constants in the operator tree of a given formula."}, :name genetic-byte-beats.gene-ops/constant-locs, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :end-column 20, :method-params ([formula]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([formula])), :doc "All constants in the operator tree of a given formula."}, mutate-complexify {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :line 62, :column 7, :end-line 62, :end-column 24, :arglists (quote ([formula])), :doc "Mutate a formula by randomly replace one of its sub-trees with a\n   function involving that subtree and t."}, :name genetic-byte-beats.gene-ops/mutate-complexify, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :end-column 24, :method-params ([formula]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([formula])), :doc "Mutate a formula by randomly replace one of its sub-trees with a\n   function involving that subtree and t."}, crossover {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :line 76, :column 7, :end-line 76, :end-column 16, :arglists (quote ([l-form r-form])), :doc "Return a breed two formula, switching a random branch in l\n   with a random branch in r."}, :name genetic-byte-beats.gene-ops/crossover, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :end-column 16, :method-params ([l-form r-form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([l-form r-form])), :doc "Return a breed two formula, switching a random branch in l\n   with a random branch in r."}, rand-opped-node {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :line 41, :column 7, :end-line 41, :end-column 22, :arglists (quote ([node])), :doc "A random AST node that is a function of a formula node."}, :name genetic-byte-beats.gene-ops/rand-opped-node, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :end-column 22, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node])), :doc "A random AST node that is a function of a formula node."}, mutate-perturb {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :line 36, :column 7, :end-line 36, :end-column 21, :arglists (quote ([formula])), :doc "Randomly modify a random number in a formula up to a max percent."}, :name genetic-byte-beats.gene-ops/mutate-perturb, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :end-column 21, :method-params ([formula]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([formula])), :doc "Randomly modify a random number in a formula up to a max percent."}, op-tree-locs {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :line 14, :column 7, :end-line 14, :end-column 19, :arglists (quote ([formula])), :doc "All valid locations in the operator tree of a given formula."}, :name genetic-byte-beats.gene-ops/op-tree-locs, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :end-column 19, :method-params ([formula]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([formula])), :doc "All valid locations in the operator tree of a given formula."}, list-locs {:protocol-inline nil, :meta {:file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :line 26, :column 7, :end-line 26, :end-column 16, :arglists (quote ([formula])), :doc "All sub-trees in the operator tree of a given formula."}, :name genetic-byte-beats.gene-ops/list-locs, :variadic false, :file "/Users/miller/dev/genetic-byte-beats/src/genetic_byte_beats/gene_ops.cljs", :end-column 16, :method-params ([formula]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([formula])), :doc "All sub-trees in the operator tree of a given formula."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{t bit-shift-right js/Math.tan bit-shift-left bit-xor * int % mod - js/Math.sin bit-and / bit-or +}, :order [bit-or bit-shift-left int / js/Math.tan bit-shift-right + js/Math.sin * bit-xor - bit-and mod t %]}, :doc nil}